"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["659685"],{940470:function(e,n,s){s.r(n),s.d(n,{default:()=>u,frontMatter:()=>i,metadata:()=>t,assets:()=>o,toc:()=>a,contentTitle:()=>d});var t=JSON.parse('{"id":"commands-legacy/blob-to-list","title":"BLOB to list","description":"BLOB to list ( blob {; offset} ) : Integer","source":"@site/i18n/fr/docusaurus-plugin-content-docs/current/commands-legacy/blob-to-list.md","sourceDirName":"commands-legacy","slug":"/commands/blob-to-list","permalink":"/docs/fr/next/commands/blob-to-list","draft":false,"unlisted":false,"editUrl":"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fblob-to-list.md%20(current)&body=Please%20enter%20your%20comment%3A","tags":[],"version":"current","frontMatter":{"id":"blob-to-list","title":"BLOB to list","slug":"/commands/blob-to-list","displayed_sidebar":"docs"},"sidebar":"docs","previous":{"title":"BLOB to integer","permalink":"/docs/fr/next/commands/blob-to-integer"},"next":{"title":"BLOB to longint","permalink":"/docs/fr/next/commands/blob-to-longint"}}'),r=s("785893"),l=s("250065");let i={id:"blob-to-list",title:"BLOB to list",slug:"/commands/blob-to-list",displayed_sidebar:"docs"},d=void 0,o={},a=[{value:"Description",id:"description",level:2},{value:"Exemple",id:"exemple",level:2},{value:"Variables et ensembles syst\xe8me",id:"variables-et-ensembles-syst\xe8me",level:2},{value:"Voir aussi",id:"voir-aussi",level:2},{value:"Propri\xe9t\xe9s",id:"propri\xe9t\xe9s",level:2}];function c(e){let n={a:"a",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"BLOB to list"})," ( ",(0,r.jsx)(n.em,{children:"blob"})," {; ",(0,r.jsx)(n.em,{children:"offset"}),"} ) : Integer"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Param\xe8tre"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"blob"}),(0,r.jsx)(n.td,{children:"Blob"}),(0,r.jsx)(n.td,{children:"\u2192"}),(0,r.jsx)(n.td,{children:"BLOB contenant la liste hi\xe9rarchique"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"offset"}),(0,r.jsx)(n.td,{children:"Integer"}),(0,r.jsx)(n.td,{children:"\u2194"}),(0,r.jsx)(n.td,{children:"Offset (en octets) dans le BLOB"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Nouvel offset apr\xe8s la lecture"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"R\xe9sultat"}),(0,r.jsx)(n.td,{children:"Integer"}),(0,r.jsx)(n.td,{children:"\u2190"}),(0,r.jsx)(n.td,{children:"R\xe9f\xe9rence de la liste nouvellement cr\xe9\xe9e"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"BLOB to list"})," cr\xe9e une nouvelle liste hi\xe9rarchique avec les donn\xe9es stock\xe9es dans le BLOB ",(0,r.jsx)(n.em,{children:"blob"})," \xe0 l'offset d'octet (\xe0 partir de z\xe9ro) sp\xe9cifi\xe9 par ",(0,r.jsx)(n.em,{children:"offset"})," et retourne un num\xe9ro de r\xe9f\xe9rence de liste hi\xe9rarchique pour cette nouvelle liste."]}),"\n",(0,r.jsxs)(n.p,{children:["Les donn\xe9es pr\xe9sentes dans le BLOB doivent \xeatre compatibles avec la commande : g\xe9n\xe9ralement, vous utilisez des BLOBs pr\xe9alablement remplis avec la commande ",(0,r.jsx)(n.a,{href:"/docs/fr/next/commands/list-to-blob",children:"LIST TO BLOB"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Si vous ne passez pas le param\xe8tre optionnel ",(0,r.jsx)(n.em,{children:"offset"}),", les valeurs de la liste sont lues \xe0 partir du d\xe9but du BLOB. Si vous g\xe9rez un BLOB dans lequel plusieurs variables ou listes ont \xe9t\xe9 stock\xe9es, vous devez passer le param\xe8tre ",(0,r.jsx)(n.em,{children:"offset"})," ainsi qu'une variable num\xe9rique. Avant l'appel, fixez cette variable num\xe9rique \xe0 l'offset d\xe9sir\xe9. Apr\xe8s l'appel, cette m\xeame variable num\xe9rique retourne l'offset de la variable suivante stock\xe9e dans le BLOB."]}),"\n",(0,r.jsx)(n.p,{children:"Apr\xe8s l'appel, la variable OK prend la valeur 1 si la liste hi\xe9rarchique a \xe9t\xe9 correctement cr\xe9\xe9e. Si l'op\xe9ration ne peut pas \xeatre effectu\xe9e \xe0 cause, par exemple, d'un manque de m\xe9moire, la variable OK prend la valeur 0."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note pour l'ind\xe9pendance de plate-forme :"})," ",(0,r.jsx)(n.strong,{children:"BLOB to list"})," et ",(0,r.jsx)(n.a,{href:"/docs/fr/next/commands/list-to-blob",children:"LIST TO BLOB"})," utilisent un format interne 4D pour g\xe9rer les listes stock\xe9es dans des BLOBs. L'avantage est que vous n'avez pas besoin de vous soucier de la conversion des octets (\"byte swapping\") entre les plates-formes lorsque vous utilisez ces deux commandes. Autrement dit, avec ces commandes, un BLOB cr\xe9\xe9 sous Windows peut \xeatre r\xe9utilis\xe9 sous Mac OS et vice-versa."]}),"\n",(0,r.jsx)(n.h2,{id:"exemple",children:"Exemple"}),"\n",(0,r.jsx)(n.p,{children:"Dans l'exemple suivant, la m\xe9thode d'un formulaire entr\xe9e extrait une liste d'un champ BLOB avant que le formulaire ne s'affiche puis le stocke dans le champ BLOB lorsque la saisie est valid\xe9e :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:'\xa0\xa0// M\xe9thode du formulaire [Choses \xe0 Faire];"Entr\xe9e"\n\xa0\n\xa0Case of\n\xa0\n\xa0\xa0\xa0\xa0:(FORM Event=On Load)\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0hListe:=BLOB to list([Choses \xe0 Faire]Id\xe9es)\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0If(OK=0)\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0hListe:=New list\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0End if\n\xa0\n\xa0\xa0\xa0\xa0:(FORM Event=On Unload)\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0CLEAR LIST(hListe;*)\n\xa0\n\xa0\xa0\xa0\xa0:(bValider=1)\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0LIST TO BLOB(hListe;[Choses \xe0 Faire]Id\xe9es)\n\xa0\n\xa0End case\n'})}),"\n",(0,r.jsx)(n.h2,{id:"variables-et-ensembles-syst\xe8me",children:"Variables et ensembles syst\xe8me"}),"\n",(0,r.jsx)(n.p,{children:"La variable OK prend la valeur 1 si la liste a \xe9t\xe9 correctement cr\xe9\xe9e, sinon elle prend la valeur 0."}),"\n",(0,r.jsx)(n.h2,{id:"voir-aussi",children:"Voir aussi"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/docs/fr/next/commands/list-to-blob",children:"LIST TO BLOB"})}),"\n",(0,r.jsx)(n.h2,{id:"propri\xe9t\xe9s",children:"Propri\xe9t\xe9s"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{}),(0,r.jsx)(n.th,{})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Num\xe9ro de commande"}),(0,r.jsx)(n.td,{children:"557"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Thread safe"}),(0,r.jsx)(n.td,{children:"\u2717"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Modifie les variables"}),(0,r.jsx)(n.td,{children:"OK"})]})]})]})]})}function u(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return d},a:function(){return i}});var t=s(667294);let r={},l=t.createContext(r);function i(e){let n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);